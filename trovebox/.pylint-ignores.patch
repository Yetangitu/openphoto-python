diff --unified --recursive '--exclude=.pylint-ignores.patch' original/api/api_activity.py patched/api/api_activity.py
--- original/api/api_activity.py
+++ patched/api/api_activity.py
@@ -22,7 +22,7 @@
             raise TroveboxError("Purge response returned False")
         return True
 
-class ApiActivity(object):
+class ApiActivity(object): # pylint: disable=too-few-public-methods
     """ Definitions of /activity/ API endpoints """
     def __init__(self, client):
         self._client = client
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/api/api_album.py patched/api/api_album.py
--- original/api/api_album.py
+++ patched/api/api_album.py
@@ -4,7 +4,7 @@
 from trovebox.objects.album import Album
 from trovebox import http
 
-class ApiAlbums(object):
+class ApiAlbums(object): # pylint: disable=too-few-public-methods
     """ Definitions of /albums/ API endpoints """
     def __init__(self, client):
         self._client = client
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/api/api_tag.py patched/api/api_tag.py
--- original/api/api_tag.py
+++ patched/api/api_tag.py
@@ -4,7 +4,7 @@
 from trovebox import http
 from trovebox.objects.tag import Tag
 
-class ApiTags(object):
+class ApiTags(object): # pylint: disable=too-few-public-methods
     """ Definitions of /tags/ API endpoints """
     def __init__(self, client):
         self._client = client
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/auth.py patched/auth.py
--- original/auth.py
+++ patched/auth.py
@@ -4,7 +4,7 @@
 from __future__ import unicode_literals
 import os
 try:
-    from configparser import ConfigParser # Python3
+    from configparser import ConfigParser # Python3 # pylint: disable=import-error
 except ImportError:
     from ConfigParser import SafeConfigParser as ConfigParser # Python2
 try:
@@ -12,9 +12,9 @@
 except ImportError: # pragma: no cover
     import StringIO as io # Python2
 
-class Auth(object):
+class Auth(object): # pylint: disable=too-few-public-methods
     """OAuth secrets"""
-    def __init__(self, config_file, host,
+    def __init__(self, config_file, host, # pylint: disable=too-many-arguments
                  consumer_key, consumer_secret,
                  token, token_secret):
         if host is None:
@@ -69,7 +69,7 @@
     parser = ConfigParser()
     parser.optionxform = str # Case-sensitive options
     try:
-        parser.read_file(buf) # Python3
+        parser.read_file(buf) # Python3 # pylint: disable=maybe-no-member
     except AttributeError:
         parser.readfp(buf) # Python2
 
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/http.py patched/http.py
--- original/http.py
+++ patched/http.py
@@ -7,18 +7,18 @@
 import requests_oauthlib
 import logging
 try:
-    from urllib.parse import urlparse, urlunparse # Python3
+    from urllib.parse import urlparse, urlunparse # Python3 # pylint: disable=import-error,no-name-in-module
 except ImportError:
     from urlparse import urlparse, urlunparse # Python2
 
 from trovebox.objects.trovebox_object import TroveboxObject
-from .errors import *
+from .errors import * # pylint: disable=wildcard-import
 from .auth import Auth
 
 if sys.version < '3':
-    TEXT_TYPE = unicode
+    TEXT_TYPE = unicode # pylint: disable=invalid-name
 else: # pragma: no cover
-    TEXT_TYPE = str
+    TEXT_TYPE = str # pylint: disable=invalid-name
 
 DUPLICATE_RESPONSE = {"code": 409,
                       "message": "This photo already exists"}
@@ -37,7 +37,7 @@
                         "ssl_verify" : True,
                         }
 
-    def __init__(self, config_file=None, host=None,
+    def __init__(self, config_file=None, host=None, # pylint: disable=too-many-arguments
                  consumer_key='', consumer_secret='',
                  token='', token_secret='', api_version=None):
 
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/__init__.py patched/__init__.py
--- original/__init__.py
+++ patched/__init__.py
@@ -2,7 +2,7 @@
 __init__.py : Trovebox package top level
 """
 from .http import Http
-from .errors import *
+from .errors import * # pylint: disable=wildcard-import
 from ._version import __version__
 from trovebox.api import api_photo
 from trovebox.api import api_tag
@@ -12,7 +12,7 @@
 
 LATEST_API_VERSION = 2
 
-class Trovebox(Http):
+class Trovebox(Http): # pylint: disable=too-many-instance-attributes
     """
     Client library for Trovebox
     If no parameters are specified, config is loaded from the default
@@ -24,7 +24,7 @@
     This should be used to ensure that your application will continue to work
         even if the Trovebox API is updated to a new revision.
     """
-    def __init__(self, config_file=None, host=None,
+    def __init__(self, config_file=None, host=None, # pylint: disable=too-many-arguments
                  consumer_key='', consumer_secret='',
                  token='', token_secret='',
                  api_version=None):
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/main.py patched/main.py
--- original/main.py
+++ patched/main.py
@@ -26,7 +26,7 @@
 
 #################################################################
 
-def main(args=sys.argv[1:]):
+def main(args=sys.argv[1:]): # pylint: disable=too-many-branches
     usage = "%prog --help"
     parser = OptionParser(usage, add_help_option=False)
     parser.add_option('-c', '--config', help="Configuration file to use",
@@ -84,11 +84,11 @@
             sys.exit(1)
 
     if options.method == "GET":
-        result = client.get(options.endpoint, process_response=False,
+        result = client.get(options.endpoint, process_response=False, # pylint: disable=star-args
                             **params)
     else:
         params, files = extract_files(params)
-        result = client.post(options.endpoint, process_response=False,
+        result = client.post(options.endpoint, process_response=False, # pylint: disable=star-args
                              files=files, **params)
         for f in files:
             files[f].close()
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/objects/tag.py patched/objects/tag.py
--- original/objects/tag.py
+++ patched/objects/tag.py
@@ -2,7 +2,7 @@
 Representation of a Tag object
 """
 try:
-    from urllib.parse import quote # Python3
+    from urllib.parse import quote # Python3 # pylint: disable=import-error,no-name-in-module
 except ImportError:
     from urllib import quote # Python2
 
diff --unified --recursive '--exclude=.pylint-ignores.patch' original/objects/trovebox_object.py patched/objects/trovebox_object.py
--- original/objects/trovebox_object.py
+++ patched/objects/trovebox_object.py
@@ -1,10 +1,10 @@
 """
 Base object supporting the storage of custom fields as attributes
 """
-class TroveboxObject(object):
+class TroveboxObject(object): # pylint: disable=too-few-public-methods
     """ Base object supporting the storage of custom fields as attributes """
     def __init__(self, trovebox, json_dict):
-        self.id = None
+        self.id = None # pylint: disable=invalid-name
         self.name = None
         self._trovebox = trovebox
         self._json_dict = json_dict
